name: Publish to NPM

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  publish-npm:
    name: üì¶ Publish Package
    runs-on: ubuntu-latest

    outputs:
      version-changed: ${{ steps.check.outputs.version_changed }}
      package-version: ${{ steps.check.outputs.package_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build library
        run: bun run build

      - name: Check if version changed
        id: check
        run: |
          PACKAGE_VERSION=$(bun --print "require('./package.json').version")
          NPM_VERSION=$(npm view @sector.siit/mlz-components version 2>/dev/null || echo "0.0.0")
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "npm_version=$NPM_VERSION" >> $GITHUB_OUTPUT
          if [ "$PACKAGE_VERSION" != "$NPM_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "üöÄ Version changed: $NPM_VERSION ‚Üí $PACKAGE_VERSION"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è Version unchanged: $PACKAGE_VERSION"
          fi

      - name: Setup Node.js for NPM publish
        if: steps.check.outputs.version_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to NPM
        if: steps.check.outputs.version_changed == 'true'
        run: |
          echo "üöÄ Publishing version ${{ steps.check.outputs.package_version }} to NPM..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip message
        if: steps.check.outputs.version_changed == 'false'
        run: |
          echo "‚è© Skipping NPM publish - no version change detected"
          echo "Current version: ${{ steps.check.outputs.package_version }}"
