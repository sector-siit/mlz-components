name: Quick Release

on:
  push:
    branches: [main]
    paths:
      - "package.json"
      - "README.md"
      - "*.md"
      - "CHANGELOG.md"
      - "LICENSE"
      - "docs/**"

jobs:
  quick-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check if version changed in package.json
        id: version_check
        run: |
          # Obtener la versión actual del package.json
          CURRENT_VERSION=$(bun --print "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Verificar si existe en NPM
          NPM_VERSION=$(npm view @sector.siit/mlz-components version 2>/dev/null || echo "0.0.0")
          echo "npm_version=$NPM_VERSION" >> $GITHUB_OUTPUT

          if [ "$CURRENT_VERSION" != "$NPM_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "🚀 Version changed: $NPM_VERSION → $CURRENT_VERSION"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Version unchanged: $CURRENT_VERSION"
          fi

      - name: Build library
        if: steps.version_check.outputs.version_changed == 'true'
        run: bun run build

      - name: Publish to NPM
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
          bun publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.version_check.outputs.current_version }}" -m "Release v${{ steps.version_check.outputs.current_version }}"
          git push origin "v${{ steps.version_check.outputs.current_version }}"

      - name: Create GitHub Release
        if: steps.version_check.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.version_check.outputs.current_version }}"
          release_name: "📦 Release v${{ steps.version_check.outputs.current_version }}"
          body: |
            ## 🚀 Release v${{ steps.version_check.outputs.current_version }}

            ### 📦 Installation
            ```bash
            npm install @sector.siit/mlz-components@${{ steps.version_check.outputs.current_version }}
            ```

            ### 📚 Documentation
            - [Storybook Documentation](https://sector-siit.github.io/mlz-components/)
            - [NPM Package](https://www.npmjs.com/package/@sector.siit/mlz-components)

            ### 📝 What's included
            - MLZ Components library
            - TypeScript definitions
            - Tailwind CSS integration
            - Customizable variables
          draft: false
          prerelease: false

      - name: Skip message
        if: steps.version_check.outputs.version_changed == 'false'
        run: |
          echo "⏩ Skipping release - no version change detected"
          echo "Current version: ${{ steps.version_check.outputs.current_version }}"
          echo "NPM version: ${{ steps.version_check.outputs.npm_version }}"
